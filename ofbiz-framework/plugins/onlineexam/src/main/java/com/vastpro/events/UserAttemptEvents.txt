UserAttemptEvents
==================

method: AllUserAttemptMaster
==================================

when user try to take exam
============================

Steps to create UserAttemptMaster
===================================
1)Validation
=============
	1.1)check partyId and examId 
		case1:false -> return error
		case2:true -> continue
		
2)validating performanceId taken from session 
==================================================
	2.1)case2:true ->skip  create UserAttemptMaster Records
		case1:false->continue (3) create UserAttemptMaster Records		
3)check allowedAttempt and noOfAttempt 
=======================================
	3.1)retrieve  allowedAttempt and noOfAttempt from UserExamMappingMaster
	3.2)Exception -> return error
	3.3)retrieved value is null or empty ->return error
	3.4)retrieved value is not null ->continue...
	3.5)check  noOfAttempt is less than allowedAttempt 
		case1:false -> return error
		case2:true ->continue...
	3.6)add +1 to noOfAttempt which should be inserted into UserAttemptMaster
4)Retrieve NoOfQuestions  from examMaster by examId
====================================================
	4.1)Exception -> return error
	4.2)retrieved value is null or empty ->return error
	4.3)retrieved value is not null ->continue...
	
5)createUserAttemptMaster  
=========================
	5.1)IN => (examId,partyId,AttemptNumber,NoOfQuestion)
	5.2)Exception -> return error
	5.3)retrieved value is null or empty ->return error
	5.4)retrieved value is not null ->continue...
	5.5)OUT => performanceId  : store performanceId which is autoGenerated
	
Steps to create UserAttemptTopicMaster
=======================================
6)find All Topic by Exam Id from ExamTopicMappingMaster
===========================================================
	6.1)IN => examId
	6.2)Exception -> return error
	6.3)retrieved value is null or empty ->return error
	6.4)retrieved value is not null ->continue...
	6.5)OUT => List Of ExamTopicMappingRecords
7)create UserAttemptTopicMaster
====================================
	7.1)for each IN =>performanceId, topicId,topicPassPercentage,totalQuestionInThisTopic=questionPerExam 
						 of ExamTopicMappingRecords List 
	7.2)Exception -> return error
	7.3)created --> continue...
	
8)













