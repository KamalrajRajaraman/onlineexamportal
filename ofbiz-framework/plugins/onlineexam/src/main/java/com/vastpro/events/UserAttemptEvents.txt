UserAttemptEvents
==================

method: AllUserAttemptMaster
==================================

when user try to take exam
============================

Steps to create UserAttemptMaster
===================================
1)Validation
=============
	1.1)check partyId and examId 
		case1:false -> return error
		case2:true -> continue
		
2)validating performanceId taken from session 
==================================================
	2.1)case2:true ->skip  create UserAttemptMaster Records
		case1:false->continue (3) create UserAttemptMaster Records		
3)check allowedAttempt and noOfAttempt 
=======================================
	3.1)retrieve  allowedAttempt and noOfAttempt from UserExamMappingMaster
	3.2)Exception -> return error
	3.3)retrieved value is null or empty ->return error
	3.4)retrieved value is not null ->continue...
	3.5)check  noOfAttempt is less than allowedAttempt 
		case1:false -> return error
		case2:true ->continue...
	3.6)add +1 to noOfAttempt which should be inserted into UserAttemptMaster
4)Retrieve NoOfQuestions  from examMaster by examId
====================================================
	4.1)Exception -> return error
	4.2)retrieved value is null or empty ->return error
	4.3)retrieved value is not null ->continue...
	
5)createUserAttemptMaster  
=========================
	5.1)IN => (examId,partyId,AttemptNumber,NoOfQuestion)
	5.2)Exception -> return error
	5.3)retrieved value is null or empty ->return error
	5.4)retrieved value is not null ->continue...
	5.5)OUT => performanceId  : store performanceId which is autoGenerated
	
Steps to create UserAttemptTopicMaster
=======================================
6)find All Topic by Exam Id from ExamTopicMappingMaster
===========================================================
	6.1)IN => examId
	6.2)Exception -> return error
	6.3)retrieved value is null or empty ->return error
	6.4)retrieved value is not null ->continue...
	6.5)OUT => List Of ExamTopicMappingRecords
7)create UserAttemptTopicMaster
====================================
	7.1)for each IN =>performanceId, topicId,topicPassPercentage,totalQuestionInThisTopic=questionPerExam 
						 of ExamTopicMappingRecords List 
						 
	7.2)Exception -> return error
	
	7.3)create List empty ->return error
	7.4)create Lis is not empty -->continue
	
8)find QuestionList by topicIdList 
====================================
	8.1)for each IN => topicId of TOPIC List , OUT = List of topicWisequestionsMap 	 
	8.2)Exception -> return error
	8.3)create List empty ->return error
	4.4)create List is not empty -->continue

9)Select Random Question in a Topic 
====================================
	9.1)create Random No. based  List Size 
	9.2)add the questionId in randamQuestion List by retrieving the questionId from questionsList based on random no.
	9.3)remove the questionId from questionsList based on random no.  to avoid duplicate Questions
	9.4)randomQuestionlist is empty return error
	9.5)randomQuestionlist is not empty return error
10)create UserAttemptAnswerMaster
===================================
	10.1)for each questionId in randomList and performanceId  create UserAttemptAnswerMaster
	10.2)Exception ->return error
	10.3)insertedQuestionList is empty ->return List
	10.4)put performanceId in session 
11)UpdateUserExamMappingRecord
=====================================
	11.1) update noOfAttempts and lastPerformanceDate in userExamMapping Master
	11.2)Exception ->return error
	














