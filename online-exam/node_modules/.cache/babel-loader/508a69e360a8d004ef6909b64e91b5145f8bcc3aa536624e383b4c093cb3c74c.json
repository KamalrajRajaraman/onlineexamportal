{"ast":null,"code":"var _jsxFileName = \"D:\\\\onlineexamportal\\\\online-exam\\\\src\\\\component\\\\admin-module\\\\edit-exam\\\\EditExam.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { Link, Outlet, useNavigate, useParams } from \"react-router-dom\";\nimport MainContent from \"../common/MainContent\";\nimport ExamTopicTable from \"./ExamTopicTable\";\nimport AccordinMaker from \"../common/AccordinMaker\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EditExamContext = /*#__PURE__*/createContext();\nconst EditExam = () => {\n  _s();\n  const [examList, setExamList] = useState([]);\n  const [examTopicMap, setExamTopicMap] = useState([]);\n  const {\n    examId\n  } = useParams();\n  const navigate = useNavigate();\n  const initialValue = {\n    examId,\n    topicId: \"\",\n    percentage: \"\",\n    topicPassPercentage: \"\",\n    questionsPerExam: \"\"\n  };\n  const [formValues, setFormValues] = useState(initialValue);\n  const text = {\n    header: \"Exam-Topic-Mapping\",\n    btnText: \"Topic to Exam \"\n  };\n  const onCreateExamTopicMappingMaster = async examTopicMappingDetails => {\n    console.log(examTopicMappingDetails);\n    const res = await fetch(\"https://localhost:8443/onlineexam/control/createExamTopicMappingMasterRecord\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      credentials: \"include\",\n      body: JSON.stringify(examTopicMappingDetails)\n    });\n    const data = await res.json();\n    if (data.result === \"success\") {\n      setFormValues(initialValue);\n      const {\n        examTopicMappingMasterRecord\n      } = data;\n      setExamTopicMap([...examTopicMap, examTopicMappingMasterRecord]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(EditExamContext.Provider, {\n    value: {\n      examList,\n      examId,\n      onCreateExamTopicMappingMaster,\n      examTopicMap,\n      setExamTopicMap,\n      setExamList,\n      formValues,\n      setFormValues\n    },\n    children: [/*#__PURE__*/_jsxDEV(MainContent, {\n      text: text,\n      to: \"add-topic-to-Exam\",\n      back: `/admin/exam/edit/examId/${examId}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExamTopicTable, {\n      examId: examId,\n      examTopicMap: examTopicMap,\n      setExamTopicMap: setExamTopicMap\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(EditExam, \"UIhRiIy+NIJnq27PLjQm9xYL4Q8=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditExam;\nexport default EditExam;\nvar _c;\n$RefreshReg$(_c, \"EditExam\");","map":{"version":3,"names":["React","createContext","useEffect","useState","Link","Outlet","useNavigate","useParams","MainContent","ExamTopicTable","AccordinMaker","jsxDEV","_jsxDEV","EditExamContext","EditExam","_s","examList","setExamList","examTopicMap","setExamTopicMap","examId","navigate","initialValue","topicId","percentage","topicPassPercentage","questionsPerExam","formValues","setFormValues","text","header","btnText","onCreateExamTopicMappingMaster","examTopicMappingDetails","console","log","res","fetch","method","headers","credentials","body","JSON","stringify","data","json","result","examTopicMappingMasterRecord","Provider","value","children","to","back","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/onlineexamportal/online-exam/src/component/admin-module/edit-exam/EditExam.js"],"sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\r\nimport { Link, Outlet, useNavigate, useParams } from \"react-router-dom\";\r\nimport MainContent from \"../common/MainContent\"\r\nimport ExamTopicTable from \"./ExamTopicTable\";\r\nimport AccordinMaker from \"../common/AccordinMaker\"\r\n\r\nexport const EditExamContext = createContext();\r\n\r\nconst EditExam = () => {\r\n  const [examList, setExamList] = useState([]);\r\n  const [examTopicMap, setExamTopicMap] = useState([]);\r\n\r\n  const { examId } = useParams();\r\n  const navigate = useNavigate();\r\n  const initialValue ={\r\n    examId,\r\n    topicId:\"\",\r\n    percentage:\"\",\r\n    topicPassPercentage:\"\",\r\n    questionsPerExam:\"\"\r\n  }\r\n  const [formValues,setFormValues] =useState(initialValue);\r\n  const text = {\r\n    header: \"Exam-Topic-Mapping\",\r\n    btnText: \"Topic to Exam \",\r\n  };\r\n\r\n\r\n  const onCreateExamTopicMappingMaster = async (examTopicMappingDetails) => {\r\n    console.log(examTopicMappingDetails);\r\n    const res = await fetch(\r\n      \"https://localhost:8443/onlineexam/control/createExamTopicMappingMasterRecord\",\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n        credentials: \"include\",\r\n        body: JSON.stringify(examTopicMappingDetails),\r\n      }\r\n    );\r\n    const data = await res.json();\r\n    if(data.result===\"success\"){\r\n      setFormValues(initialValue);\r\n    const { examTopicMappingMasterRecord } = data;\r\n    setExamTopicMap([...examTopicMap, examTopicMappingMasterRecord]);\r\n\r\n    }\r\n  };\r\n\r\n  return (\r\n    <EditExamContext.Provider\r\n      value={{\r\n        examList,\r\n        examId,\r\n        onCreateExamTopicMappingMaster,\r\n        examTopicMap,\r\n        setExamTopicMap,\r\n        setExamList,\r\n        formValues,\r\n        setFormValues\r\n       \r\n      }}\r\n    >\r\n      \r\n\r\n      <MainContent\r\n        text={text}\r\n        to=\"add-topic-to-Exam\"\r\n        back={`/admin/exam/edit/examId/${examId}`}\r\n      />\r\n      <ExamTopicTable examId={examId} examTopicMap={examTopicMap} setExamTopicMap={setExamTopicMap}/>\r\n     \r\n    </EditExamContext.Provider>\r\n  );\r\n};\r\n\r\nexport default EditExam;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}