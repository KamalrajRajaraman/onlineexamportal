{"ast":null,"code":"var _jsxFileName = \"D:\\\\onlineexamportal\\\\online-exam\\\\src\\\\component\\\\AddQuestions.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Input from \"./Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddQuestions = () => {\n  _s();\n  const [questionId, setQuestionId] = useState(\"\");\n  const [questionDetail, setQuestionDetail] = useState(\"\");\n  const [optionA, setOptionA] = useState(\"\");\n  const [optionB, setOptionB] = useState(\"\");\n  const [optionC, setOptionC] = useState(\"\");\n  const [optionD, setOptionD] = useState(\"\");\n  const [optionE, setOptionE] = useState(\"\");\n  const [answer, setAnswer] = useState(\"\");\n  const [numAnswers, setNumAnswers] = useState(\"\");\n  const [questionType, setquestionType] = useState(\"\");\n  const [difficultyLevel, setDifficultyLevel] = useState(\"\");\n  const [answerValue, setAnswerValue] = useState(\"\");\n  const [topicId, setTopicId] = useState(\"\");\n  const [negativeMarkValue, setNegativeMarkValue] = useState(\"\");\n  const onSubmit = e => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        name: \"questionId\",\n        type: \"text\",\n        text: \"Question Id\",\n        state: questionId,\n        setStateFun: setQuestionId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"questionDetail\",\n        type: \"text\",\n        text: \"Question Detail\",\n        state: questionDetail,\n        setStateFun: setQuestionDetail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"optionA\",\n        type: \"text\",\n        text: \"Option A\",\n        state: optionA,\n        setStateFun: setOptionA\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"optionB\",\n        type: \"text\",\n        text: \"Option B\",\n        state: optionB,\n        setStateFun: setOptionB\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"optionC\",\n        type: \"text\",\n        text: \"Option C\",\n        state: optionC,\n        setStateFun: setOptionC\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"optionD\",\n        type: \"text\",\n        text: \"Option D\",\n        state: optionD,\n        setStateFun: setOptionD\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"optionE\",\n        type: \"text\",\n        text: \"Option E\",\n        state: optionE,\n        setStateFun: setOptionE\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"answer\",\n        type: \"text\",\n        text: \"Answer\",\n        state: answer,\n        setStateFun: setAnswer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"numAnswers\",\n        type: \"text\",\n        text: \"Num Answers\",\n        state: numAnswers,\n        setStateFun: setNumAnswers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"questionType\",\n        type: \"text\",\n        text: \"Question Type\",\n        state: questionType,\n        setStateFun: setquestionType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"difficultyLevel\",\n        type: \"text\",\n        text: \"Difficulty Level\",\n        state: difficultyLevel,\n        setStateFun: setDifficultyLevel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"answerValue\",\n        type: \"text\",\n        text: \"Answer Value\",\n        state: answerValue,\n        setStateFun: setAnswerValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"topicId\",\n        type: \"text\",\n        text: \"Topic Id\",\n        state: topicId,\n        setStateFun: setTopicId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"negativeMarkValue\",\n        type: \"text\",\n        text: \"Negative Mark Value\",\n        state: negativeMarkValue,\n        setStateFun: setNegativeMarkValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n};\n_s(AddQuestions, \"Hgaw1j1B781xOqhZpME8DmBXXYM=\");\n_c = AddQuestions;\nexport default AddQuestions;\n\n// questionId decimal (10,0) NOT NULL, (should be autogenerated and should not \n//   have gaps at all)\n//    questionDetail varchar (5000) NOT NULL,\n//    optionA varchar (5000) NOT NULL,\n//    optionB varchar (5000) NOT NULL,\n//    optionC varchar (5000) NOT NULL,\n//    optionD varchar (5000) NOT NULL,\n//    optionE varchar (5000) NOT NULL,\n//    answer varchar (45) NOT NULL,\n//    numAnswers decimal (10,0) NOT NULL,\n//    questionType related to the enumeration QuestionType,\n//    difficultyLevel int (10) unsigned default NULL,\n//    answerValue decimal (4,2) default NULL,\n//   topicId varchar (20), --related to the TopicMaster Entity\n//    negativeMarkValue decimal (4,2) default NUL\nvar _c;\n$RefreshReg$(_c, \"AddQuestions\");","map":{"version":3,"names":["React","useState","Input","jsxDEV","_jsxDEV","AddQuestions","_s","questionId","setQuestionId","questionDetail","setQuestionDetail","optionA","setOptionA","optionB","setOptionB","optionC","setOptionC","optionD","setOptionD","optionE","setOptionE","answer","setAnswer","numAnswers","setNumAnswers","questionType","setquestionType","difficultyLevel","setDifficultyLevel","answerValue","setAnswerValue","topicId","setTopicId","negativeMarkValue","setNegativeMarkValue","onSubmit","e","className","children","name","type","text","state","setStateFun","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/onlineexamportal/online-exam/src/component/AddQuestions.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Input from \"./Input\";\r\n\r\nconst AddQuestions = () => {\r\n\r\n  const [questionId,setQuestionId] =useState(\"\");\r\n  const [questionDetail, setQuestionDetail] = useState(\"\");\r\n  const [optionA, setOptionA] = useState(\"\");\r\n  const [optionB, setOptionB] = useState(\"\");\r\n  const [optionC, setOptionC] = useState(\"\");\r\n  const [optionD, setOptionD] = useState(\"\");\r\n  const [optionE, setOptionE] = useState(\"\");\r\n const [answer, setAnswer] = useState(\"\");\r\n const [numAnswers, setNumAnswers] = useState(\"\");\r\n const [questionType, setquestionType] = useState(\"\");\r\n const [difficultyLevel, setDifficultyLevel] = useState(\"\");\r\n const [answerValue, setAnswerValue] = useState(\"\");\r\n const [topicId, setTopicId] = useState(\"\");\r\n const [negativeMarkValue, setNegativeMarkValue] = useState(\"\");\r\n  const onSubmit=(e)=>{\r\n\r\n  }\r\n  return <div className=\"container-fluid\">\r\n    <form onSubmit={onSubmit}>\r\n      <Input name=\"questionId\" type={\"text\"} text={\"Question Id\"} state={questionId} setStateFun={setQuestionId}/>\r\n      <Input name=\"questionDetail\" type={\"text\"} text={\"Question Detail\"} state={questionDetail} setStateFun={setQuestionDetail}/>\r\n      <Input name=\"optionA\" type={\"text\"} text={\"Option A\"} state={optionA} setStateFun={setOptionA}/>\r\n      <Input name=\"optionB\" type={\"text\"} text={\"Option B\"} state={optionB} setStateFun={setOptionB}/>\r\n      <Input name=\"optionC\" type={\"text\"} text={\"Option C\"} state={optionC} setStateFun={setOptionC}/>\r\n      <Input name=\"optionD\" type={\"text\"} text={\"Option D\"} state={optionD} setStateFun={setOptionD}/>\r\n      <Input name=\"optionE\" type={\"text\"} text={\"Option E\"} state={optionE} setStateFun={setOptionE}/>\r\n      <Input name=\"answer\" type={\"text\"} text={\"Answer\"} state={answer} setStateFun={setAnswer}/>\r\n      <Input name=\"numAnswers\" type={\"text\"} text={\"Num Answers\"} state={numAnswers} setStateFun={setNumAnswers}/>\r\n      <Input name=\"questionType\" type={\"text\"} text={\"Question Type\"} state={questionType} setStateFun={setquestionType}/>\r\n      <Input name=\"difficultyLevel\" type={\"text\"} text={\"Difficulty Level\"} state={difficultyLevel} setStateFun={setDifficultyLevel}/>\r\n      <Input name=\"answerValue\" type={\"text\"} text={\"Answer Value\"} state={answerValue} setStateFun={setAnswerValue}/>\r\n      <Input name=\"topicId\" type={\"text\"} text={\"Topic Id\"} state={topicId} setStateFun={setTopicId}/>\r\n      <Input name=\"negativeMarkValue\" type={\"text\"} text={\"Negative Mark Value\"} state={negativeMarkValue} setStateFun={setNegativeMarkValue}/>\r\n    </form>\r\n  </div>;\r\n};\r\n\r\nexport default AddQuestions;\r\n\r\n// questionId decimal (10,0) NOT NULL, (should be autogenerated and should not \r\n//   have gaps at all)\r\n//    questionDetail varchar (5000) NOT NULL,\r\n//    optionA varchar (5000) NOT NULL,\r\n//    optionB varchar (5000) NOT NULL,\r\n//    optionC varchar (5000) NOT NULL,\r\n//    optionD varchar (5000) NOT NULL,\r\n//    optionE varchar (5000) NOT NULL,\r\n//    answer varchar (45) NOT NULL,\r\n//    numAnswers decimal (10,0) NOT NULL,\r\n//    questionType related to the enumeration QuestionType,\r\n//    difficultyLevel int (10) unsigned default NULL,\r\n//    answerValue decimal (4,2) default NULL,\r\n//   topicId varchar (20), --related to the TopicMaster Entity\r\n//    negativeMarkValue decimal (4,2) default NUL"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}