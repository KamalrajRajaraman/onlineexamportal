{"ast":null,"code":"var _jsxFileName = \"D:\\\\onlineexamportal\\\\online-exam\\\\src\\\\component\\\\common\\\\FormInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormInput = ({\n  id,\n  value,\n  onChange,\n  placeholder,\n  text,\n  type,\n  passView,\n  name,\n  error\n}) => {\n  _s();\n  const [typePass, setTypePass] = useState(true);\n  const onClick = () => {\n    setTypePass(!typePass);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: id,\n      className: \"form-label\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: typePass ? type : \"text\",\n      className: \"form-control\",\n      id: id,\n      name: name,\n      value: value,\n      onChange: onChange,\n      placeholder: placeholder,\n      security: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"small\", {\n        className: \"text-danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: passView && type === \"password\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          onClick: onClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this), \" Show Password\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_s(FormInput, \"4/agKC9VNbMIvuLMRSQRRluEreI=\");\n_c = FormInput;\nexport default FormInput;\nvar _c;\n$RefreshReg$(_c, \"FormInput\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FormInput","id","value","onChange","placeholder","text","type","passView","name","error","_s","typePass","setTypePass","onClick","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","security","_c","$RefreshReg$"],"sources":["D:/onlineexamportal/online-exam/src/component/common/FormInput.js"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst FormInput = ({id,value,onChange,placeholder,text,type,passView,name,error}) => {\r\n    const [typePass, setTypePass] = useState(true);\r\n    const onClick = () => {\r\n      setTypePass(!typePass);\r\n    };\r\n  return (\r\n    <div className=\"mb-3\">\r\n    <label htmlFor={id} className=\"form-label\">\r\n      {text}\r\n    </label>\r\n    <input\r\n      type={typePass ? type : \"text\"}\r\n      className=\"form-control\"\r\n      id={id}\r\n      name={name}\r\n      value={value}\r\n      onChange={onChange}\r\n      placeholder={placeholder}\r\n      security=\"\"\r\n    />\r\n    <div className='row'> <small className='text-danger'>{error}</small></div>\r\n    <div className='row'>\r\n        {passView && type === \"password\" && (\r\n      <div>\r\n        <input type=\"checkbox\" onClick={onClick} /> Show Password\r\n      </div>\r\n    )}</div>\r\n   \r\n    \r\n  </div>\r\n  )\r\n}\r\n\r\nexport default FormInput"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,SAAS,GAAGA,CAAC;EAACC,EAAE;EAACC,KAAK;EAACC,QAAQ;EAACC,WAAW;EAACC,IAAI;EAACC,IAAI;EAACC,QAAQ;EAACC,IAAI;EAACC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACjF,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAMgB,OAAO,GAAGA,CAAA,KAAM;IACpBD,WAAW,CAAC,CAACD,QAAQ,CAAC;EACxB,CAAC;EACH,oBACEZ,OAAA;IAAKe,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACrBhB,OAAA;MAAOiB,OAAO,EAAEf,EAAG;MAACa,SAAS,EAAC,YAAY;MAAAC,QAAA,EACvCV;IAAI;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACRrB,OAAA;MACEO,IAAI,EAAEK,QAAQ,GAAGL,IAAI,GAAG,MAAO;MAC/BQ,SAAS,EAAC,cAAc;MACxBb,EAAE,EAAEA,EAAG;MACPO,IAAI,EAAEA,IAAK;MACXN,KAAK,EAAEA,KAAM;MACbC,QAAQ,EAAEA,QAAS;MACnBC,WAAW,EAAEA,WAAY;MACzBiB,QAAQ,EAAC;IAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,eACFrB,OAAA;MAAKe,SAAS,EAAC,KAAK;MAAAC,QAAA,GAAC,GAAC,eAAAhB,OAAA;QAAOe,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAEN;MAAK;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC1ErB,OAAA;MAAKe,SAAS,EAAC,KAAK;MAAAC,QAAA,EACfR,QAAQ,IAAID,IAAI,KAAK,UAAU,iBAClCP,OAAA;QAAAgB,QAAA,gBACEhB,OAAA;UAAOO,IAAI,EAAC,UAAU;UAACO,OAAO,EAAEA;QAAQ;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,kBAC7C;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGL,CAAC;AAER,CAAC;AAAAV,EAAA,CA/BKV,SAAS;AAAAsB,EAAA,GAATtB,SAAS;AAiCf,eAAeA,SAAS;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}