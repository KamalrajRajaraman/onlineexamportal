{"ast":null,"code":"var _jsxFileName = \"D:\\\\onlineexamportal\\\\online-exam\\\\src\\\\component\\\\edit-exam\\\\EditExam.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { Link, Outlet, useNavigate, useParams } from \"react-router-dom\";\nimport MainContent from \"../common/MainContent\";\nimport ExamTopicTable from \"./ExamTopicTable\";\nimport AccordinMaker from \"../common/AccordinMaker\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EditExamContext = /*#__PURE__*/createContext();\nconst EditExam = () => {\n  _s();\n  const [examList, setExamList] = useState([]);\n  const [examTopicMap, setExamTopicMap] = useState([]);\n  const {\n    examId\n  } = useParams();\n  const navigate = useNavigate();\n  const initialValue = {\n    examId,\n    topicId: \"\",\n    percentage: \"\",\n    topicPassPercentage: \"\",\n    questionsPerExam: \"\"\n  };\n  const [fromValues, setFromValues] = useState(initialValue);\n  const text = {\n    header: \"Exam-Topic-Mapping\",\n    btnText: \"Topic to Exam \"\n  };\n\n  // useEffect(() => {\n  //   fetchExamList();\n  //   return () => {\n  //     setExamList([]);\n  //   };\n  // }, []);\n\n  // const fetchExamList = async () => {\n  //   const res = await fetch(\n  //     `https://localhost:8443/onlineexam/control/getExamDetails?examId=${examId}`,\n  //     { credentials: \"include\" }\n  //   );\n  //   const { examList } = await res.json();\n  //   console.log(examList);\n  //   setExamList(examList);\n  //   return;\n  // };\n\n  const onCreateExamTopicMappingMaster = async examTopicMappingDetails => {\n    console.log(examTopicMappingDetails);\n    const res = await fetch(\"https://localhost:8443/onlineexam/control/createExamTopicMappingMasterRecord\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      credentials: \"include\",\n      body: JSON.stringify(examTopicMappingDetails)\n    });\n    const data = await res.json();\n    const {\n      examTopicMappingMasterRecord\n    } = data;\n    setExamTopicMap([...examTopicMap, examTopicMappingMasterRecord]);\n  };\n  return /*#__PURE__*/_jsxDEV(EditExamContext.Provider, {\n    value: {\n      examList,\n      examId,\n      onCreateExamTopicMappingMaster,\n      examTopicMap,\n      setExamTopicMap,\n      setExamList,\n      fromValues,\n      setFromValues\n      // fetchExamList,\n    },\n    children: [/*#__PURE__*/_jsxDEV(MainContent, {\n      text: text,\n      to: \"add-topic-to-Exam\",\n      back: `/admin/exam/edit/examId/${examId}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExamTopicTable, {\n      examId: examId,\n      examTopicMap: examTopicMap,\n      setExamTopicMap: setExamTopicMap\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(EditExam, \"8dqS9L99ODDTKnAMm50W2RQc8QA=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditExam;\nexport default EditExam;\nvar _c;\n$RefreshReg$(_c, \"EditExam\");","map":{"version":3,"names":["React","createContext","useEffect","useState","Link","Outlet","useNavigate","useParams","MainContent","ExamTopicTable","AccordinMaker","jsxDEV","_jsxDEV","EditExamContext","EditExam","_s","examList","setExamList","examTopicMap","setExamTopicMap","examId","navigate","initialValue","topicId","percentage","topicPassPercentage","questionsPerExam","fromValues","setFromValues","text","header","btnText","onCreateExamTopicMappingMaster","examTopicMappingDetails","console","log","res","fetch","method","headers","credentials","body","JSON","stringify","data","json","examTopicMappingMasterRecord","Provider","value","children","to","back","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/onlineexamportal/online-exam/src/component/edit-exam/EditExam.js"],"sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\r\nimport { Link, Outlet, useNavigate, useParams } from \"react-router-dom\";\r\nimport MainContent from \"../common/MainContent\"\r\nimport ExamTopicTable from \"./ExamTopicTable\";\r\nimport AccordinMaker from \"../common/AccordinMaker\"\r\n\r\nexport const EditExamContext = createContext();\r\n\r\nconst EditExam = () => {\r\n  const [examList, setExamList] = useState([]);\r\n  const [examTopicMap, setExamTopicMap] = useState([]);\r\n\r\n  const { examId } = useParams();\r\n  const navigate = useNavigate();\r\n  const initialValue ={\r\n    examId,\r\n    topicId:\"\",\r\n    percentage:\"\",\r\n    topicPassPercentage:\"\",\r\n    questionsPerExam:\"\"\r\n  }\r\n  const [fromValues,setFromValues] =useState(initialValue);\r\n  const text = {\r\n    header: \"Exam-Topic-Mapping\",\r\n    btnText: \"Topic to Exam \",\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   fetchExamList();\r\n  //   return () => {\r\n  //     setExamList([]);\r\n  //   };\r\n  // }, []);\r\n\r\n  // const fetchExamList = async () => {\r\n  //   const res = await fetch(\r\n  //     `https://localhost:8443/onlineexam/control/getExamDetails?examId=${examId}`,\r\n  //     { credentials: \"include\" }\r\n  //   );\r\n  //   const { examList } = await res.json();\r\n  //   console.log(examList);\r\n  //   setExamList(examList);\r\n  //   return;\r\n  // };\r\n\r\n  const onCreateExamTopicMappingMaster = async (examTopicMappingDetails) => {\r\n    console.log(examTopicMappingDetails);\r\n    const res = await fetch(\r\n      \"https://localhost:8443/onlineexam/control/createExamTopicMappingMasterRecord\",\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n        credentials: \"include\",\r\n        body: JSON.stringify(examTopicMappingDetails),\r\n      }\r\n    );\r\n    const data = await res.json();\r\n    const { examTopicMappingMasterRecord } = data;\r\n    setExamTopicMap([...examTopicMap, examTopicMappingMasterRecord]);\r\n\r\n    \r\n  };\r\n\r\n  return (\r\n    <EditExamContext.Provider\r\n      value={{\r\n        examList,\r\n        examId,\r\n        onCreateExamTopicMappingMaster,\r\n        examTopicMap,\r\n        setExamTopicMap,\r\n        setExamList,\r\n        fromValues,\r\n        setFromValues\r\n        // fetchExamList,\r\n      }}\r\n    >\r\n      {/* <div className=\"row\">\r\n        <div className=\"col p-0 border-bottom border-3 border-dark\">\r\n          <h2 className=\"p-2\">Exam Details</h2>\r\n        </div>\r\n      </div>\r\n      <nav>\r\n        <div\r\n          className=\"nav nav-tabs mt-2 border navbar-light bg-light fw-bold   px-2 pt-2\"\r\n          id=\"nav-tab\"\r\n          role=\"tablist\"\r\n        >\r\n          <button\r\n            className=\"nav-link text-dark active\"\r\n            id=\"nav-view-all-tab\"\r\n            data-bs-toggle=\"tab\"\r\n            data-bs-target=\"#nav-view-all\"\r\n            type=\"button\"\r\n            role=\"tab\"\r\n           \r\n            onClick={() => navigate(\"view-all\")}\r\n          >\r\n            Exam To Topic Relation\r\n          </button>\r\n          <button\r\n            className=\"nav-link  text-dark \"\r\n            id=\"nav-add-topic-to-exam-tab\"\r\n            data-bs-toggle=\"tab\"\r\n            data-bs-target=\"#nav-add-topic-to-exam\"\r\n            type=\"button\"\r\n            role=\"tab\"\r\n            \r\n            onClick={() => navigate(\"add-topic-to-exam\")}\r\n          >\r\n            Add Topic to Exam\r\n          </button>\r\n\r\n          <button\r\n            className=\"nav-link text-dark\"\r\n            id=\"nav-questions-tab\"\r\n            data-bs-toggle=\"tab\"\r\n            data-bs-target=\"#nav-questions\"\r\n            type=\"button\"\r\n            role=\"tab\"\r\n           \r\n            onClick={() => navigate(\"questions\")}\r\n          >\r\n            Questions\r\n          </button>\r\n        </div>\r\n      </nav>\r\n\r\n      <div className=\"tab-content\" id=\"nav-tabContent\">\r\n        <div\r\n          class=\"tab-pane fade show active\"\r\n          id=\"nav-view-all\"\r\n          role=\"tabpanel\"\r\n        >\r\n          <Outlet />\r\n        </div>\r\n        <div className=\"tab-pane fade\" id=\"nav-add-topic-to-exam\" role=\"tabpanel\">\r\n          <Outlet />\r\n        </div>\r\n\r\n        <div className=\"tab-pane fade\" id=\"nav-questions\" role=\"tabpanel\">\r\n          <Outlet />\r\n        </div>\r\n      </div> */}\r\n\r\n      <MainContent\r\n        text={text}\r\n        to=\"add-topic-to-Exam\"\r\n        back={`/admin/exam/edit/examId/${examId}`}\r\n      />\r\n      <ExamTopicTable examId={examId} examTopicMap={examTopicMap} setExamTopicMap={setExamTopicMap}/>\r\n      {/* <AccordinMaker\r\n        objects={[]}\r\n        id={\"topicId\"}\r\n        name={\"topicName\"}\r\n        onDelete={\"\"}\r\n        onEdit={\"\"}\r\n        questions={examList}\r\n      /> */}\r\n    </EditExamContext.Provider>\r\n  );\r\n};\r\n\r\nexport default EditExam;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}