{"ast":null,"code":"var _jsxFileName = \"D:\\\\onlineexamportal\\\\online-exam\\\\src\\\\component\\\\edit-exam\\\\EditExam.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect, useState } from \"react\";\nimport MainContent from \"../common/MainContent\";\nimport { useParams } from \"react-router-dom\";\nimport ExamTopicTable from \"./ExamTopicTable\";\nimport AccordinMaker from \"./AccordinMaker\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EditExamContext = /*#__PURE__*/createContext();\nconst EditExam = () => {\n  _s();\n  const [examList, setExamList] = useState([]);\n  const [examTopicMap, setExamTopicMap] = useState([]);\n  const {\n    examId\n  } = useParams();\n  const text = {\n    header: \"Exam-Topic-Mapping\",\n    btnText: \"Topic to Exam \"\n  };\n  useEffect(() => {\n    fetchExamList();\n    return () => {\n      setExamList([]);\n    };\n  }, []);\n  const fetchExamList = async () => {\n    const res = await fetch(`https://localhost:8443/onlineexam/control/getExamDetails?examId=${examId}`);\n    const {\n      examList\n    } = await res.json();\n    setExamList(examList);\n    topicList(examList);\n  };\n  const onCreateExamTopicMappingMaster = async examTopicMappingDetails => {\n    console.log(examTopicMappingDetails);\n    const res = await fetch(\"https://localhost:8443/onlineexam/control/createExamTopicMappingMasterRecord\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(examTopicMappingDetails)\n    });\n    const data = await res.json();\n    const {\n      examTopicMappingMasterRecord\n    } = data;\n    setExamTopicMap([...examTopicMap, examTopicMappingMasterRecord]);\n  };\n  const topicList = examList => {\n    let unique = [];\n    let topic = [];\n    examList.forEach(element => {\n      if (!unique.includes(element.topicId)) {\n        unique.push(element.topicId);\n        topic.push({\n          examId: element.examId,\n          examName: element.examName,\n          topicId: element.topicId,\n          topicName: element.topicName,\n          percentage: element.percentage,\n          topicPassPercentage: element.topicPassPercentage,\n          questionPerExam: element.questionPerExam\n        });\n      }\n    });\n    return topic;\n  };\n  return /*#__PURE__*/_jsxDEV(EditExamContext.Provider, {\n    value: {\n      examId,\n      onCreateExamTopicMappingMaster\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col p-0 border\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"p-2\",\n          children: \"Exam Topic Mapping\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(EditExam, \"YSEwbFfWb3J3Nk5zY8HCT5i5E2I=\", false, function () {\n  return [useParams];\n});\n_c = EditExam;\nexport default EditExam;\nvar _c;\n$RefreshReg$(_c, \"EditExam\");","map":{"version":3,"names":["React","createContext","useEffect","useState","MainContent","useParams","ExamTopicTable","AccordinMaker","jsxDEV","_jsxDEV","EditExamContext","EditExam","_s","examList","setExamList","examTopicMap","setExamTopicMap","examId","text","header","btnText","fetchExamList","res","fetch","json","topicList","onCreateExamTopicMappingMaster","examTopicMappingDetails","console","log","method","headers","body","JSON","stringify","data","examTopicMappingMasterRecord","unique","topic","forEach","element","includes","topicId","push","examName","topicName","percentage","topicPassPercentage","questionPerExam","Provider","value","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/onlineexamportal/online-exam/src/component/edit-exam/EditExam.js"],"sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\r\nimport MainContent from \"../common/MainContent\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ExamTopicTable from \"./ExamTopicTable\";\r\nimport AccordinMaker from \"./AccordinMaker\";\r\n\r\nexport const EditExamContext = createContext();\r\nconst EditExam = () => {\r\n\r\n  const [examList, setExamList] = useState([]);\r\n\r\n  const [examTopicMap, setExamTopicMap] = useState([]);\r\n\r\n  const { examId } = useParams();\r\n\r\n  const text = {\r\n    header: \"Exam-Topic-Mapping\",\r\n    btnText: \"Topic to Exam \",\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchExamList();\r\n    return () => {\r\n      setExamList([]);\r\n    };\r\n  }, []);\r\n\r\n  const fetchExamList = async () => {\r\n    const res = await fetch(\r\n      `https://localhost:8443/onlineexam/control/getExamDetails?examId=${examId}`\r\n    );\r\n    const { examList } = await res.json();\r\n    setExamList(examList);\r\n    topicList(examList);\r\n  };\r\n\r\n  const onCreateExamTopicMappingMaster = async (examTopicMappingDetails) => {\r\n    console.log(examTopicMappingDetails);\r\n    const res = await fetch(\r\n      \"https://localhost:8443/onlineexam/control/createExamTopicMappingMasterRecord\",\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(examTopicMappingDetails),\r\n      }\r\n    );\r\n    const data = await res.json();\r\n    const { examTopicMappingMasterRecord } = data;\r\n    setExamTopicMap([...examTopicMap, examTopicMappingMasterRecord]);\r\n  };\r\n\r\n  const topicList = (examList) => {\r\n    let unique = [];\r\n    let topic=[];\r\n    examList.forEach((element) => {\r\n      if (!unique.includes(element.topicId)){\r\n        unique.push(element.topicId);\r\n        topic.push({ \r\n          examId:element.examId,\r\n          examName:element.examName,\r\n          topicId: element.topicId, \r\n          topicName: element.topicName,\r\n          percentage:element.percentage,\r\n          topicPassPercentage:element.topicPassPercentage,\r\n          questionPerExam:element.questionPerExam\r\n        });\r\n      }\r\n       \r\n    });\r\n    return topic;\r\n  };\r\n\r\n  return (\r\n    <EditExamContext.Provider\r\n      value={{ examId, onCreateExamTopicMappingMaster }}\r\n    >\r\n       <div className=\"row\">\r\n          <div className=\"col p-0 border\">\r\n            <h2 className=\"p-2\">{\"Exam Topic Mapping\"}</h2>\r\n          </div>\r\n          </div>\r\n      {/* <MainContent\r\n        text={text}\r\n        to=\"Topic to Exam\"\r\n        back={`/admin/exam/edit/examId/${examId}`}\r\n      />\r\n      <ExamTopicTable examId={examId} examTopicMap={examTopicMap} setExamTopicMap={setExamTopicMap}/>\r\n      <AccordinMaker\r\n        objects={topicList(examList)}\r\n        id={\"topicId\"}\r\n        name={\"topicName\"}\r\n        onDelete={\"\"}\r\n        onEdit={\"\"}\r\n        questions={examList}\r\n      /> */}\r\n    </EditExamContext.Provider>\r\n  );\r\n};\r\n\r\nexport default EditExam;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}