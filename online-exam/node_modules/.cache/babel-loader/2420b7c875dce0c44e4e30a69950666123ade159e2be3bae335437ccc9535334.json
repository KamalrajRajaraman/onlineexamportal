{"ast":null,"code":"var _jsxFileName = \"D:\\\\onlineexamportal\\\\online-exam\\\\src\\\\component\\\\user\\\\ShowExam.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { EditUserContext } from './EditUser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShowExam = () => {\n  _s();\n  const {\n    partyId\n  } = useContext(EditUserContext);\n  const [exams, setExams] = useState([]);\n  const param = useParams();\n  useEffect(() => {\n    fetch(`https://localhost:8443/onlineexam/control/showExamsForPartyId`, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify({\n        partyId\n      })\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      console.log('final data:::', data);\n      setExams(data.examList);\n      console.log(data.examList);\n      // setUsers(data.userList)\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-bordered\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"bg-dark text-white\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" Exam ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 26\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" Exam Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 26\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: exams && exams.map(exam => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: exam.examId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: exam.examName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)]\n          }, exam.examId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(ShowExam, \"lalGbghpTuuHoCdN4WrBjMWghec=\", false, function () {\n  return [useParams];\n});\n_c = ShowExam;\nexport default ShowExam;\nvar _c;\n$RefreshReg$(_c, \"ShowExam\");","map":{"version":3,"names":["React","useContext","useEffect","useState","useParams","EditUserContext","jsxDEV","_jsxDEV","ShowExam","_s","partyId","exams","setExams","param","fetch","method","headers","credentials","body","JSON","stringify","then","response","json","data","console","log","examList","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","exam","examId","examName","_c","$RefreshReg$"],"sources":["D:/onlineexamportal/online-exam/src/component/user/ShowExam.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport { EditUserContext } from './EditUser';\r\n\r\nconst ShowExam = () => {\r\n    const {partyId} =useContext(EditUserContext);\r\n    const [exams, setExams] =useState([]);\r\n    const param=useParams();\r\n   \r\n    useEffect(()=>{\r\n        fetch(`https://localhost:8443/onlineexam/control/showExamsForPartyId`,\r\n        {\r\n          method:'POST', \r\n          headers:\r\n          {'Content-type':'application/json'},\r\n          credentials: 'include',\r\n         body: JSON.stringify({partyId})\r\n        }\r\n        )\r\n        .then(response=>{ return response.json()})\r\n        .then(data=>{\r\n          console.log('final data:::', data);\r\n          setExams(data.examList);\r\n           console.log(data.examList)\r\n          // setUsers(data.userList)\r\n        })\r\n      },[])\r\n\r\n  return (\r\n    <div>\r\n       <div className='card-body'>\r\n            <table className='table table-bordered'>\r\n                <thead className='bg-dark text-white'>\r\n                    <tr>\r\n                         <th> Exam ID</th>\r\n                         <th> Exam Name</th>\r\n                        {/* <th>Action</th> */}\r\n                    </tr>\r\n                    </thead>\r\n\r\n      <tbody>\r\n       {exams&&\r\n\r\n       \r\n        exams.map((exam)=>(\r\n          \r\n            <tr key={exam.examId}>\r\n              <td>{exam.examId}</td>\r\n              <td>{exam.examName}</td>\r\n            </tr>\r\n            )\r\n        )\r\n       }\r\n       </tbody>\r\n       </table>\r\n       </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ShowExam\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,eAAe,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM;IAACC;EAAO,CAAC,GAAET,UAAU,CAACI,eAAe,CAAC;EAC5C,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAET,QAAQ,CAAC,EAAE,CAAC;EACrC,MAAMU,KAAK,GAACT,SAAS,CAAC,CAAC;EAEvBF,SAAS,CAAC,MAAI;IACVY,KAAK,CAAE,+DAA8D,EACrE;MACEC,MAAM,EAAC,MAAM;MACbC,OAAO,EACP;QAAC,cAAc,EAAC;MAAkB,CAAC;MACnCC,WAAW,EAAE,SAAS;MACvBC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACV;MAAO,CAAC;IAC/B,CACA,CAAC,CACAW,IAAI,CAACC,QAAQ,IAAE;MAAE,OAAOA,QAAQ,CAACC,IAAI,CAAC,CAAC;IAAA,CAAC,CAAC,CACzCF,IAAI,CAACG,IAAI,IAAE;MACVC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,IAAI,CAAC;MAClCZ,QAAQ,CAACY,IAAI,CAACG,QAAQ,CAAC;MACtBF,OAAO,CAACC,GAAG,CAACF,IAAI,CAACG,QAAQ,CAAC;MAC3B;IACF,CAAC,CAAC;EACJ,CAAC,EAAC,EAAE,CAAC;EAET,oBACEpB,OAAA;IAAAqB,QAAA,eACGrB,OAAA;MAAKsB,SAAS,EAAC,WAAW;MAAAD,QAAA,eACrBrB,OAAA;QAAOsB,SAAS,EAAC,sBAAsB;QAAAD,QAAA,gBACnCrB,OAAA;UAAOsB,SAAS,EAAC,oBAAoB;UAAAD,QAAA,eACjCrB,OAAA;YAAAqB,QAAA,gBACKrB,OAAA;cAAAqB,QAAA,EAAI;YAAQ;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACjB1B,OAAA;cAAAqB,QAAA,EAAI;YAAU;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEpB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAEtB1B,OAAA;UAAAqB,QAAA,EACEjB,KAAK,IAGLA,KAAK,CAACuB,GAAG,CAAEC,IAAI,iBAEX5B,OAAA;YAAAqB,QAAA,gBACErB,OAAA;cAAAqB,QAAA,EAAKO,IAAI,CAACC;YAAM;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACtB1B,OAAA;cAAAqB,QAAA,EAAKO,IAAI,CAACE;YAAQ;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA,GAFjBE,IAAI,CAACC,MAAM;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGhB,CAER;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAAxB,EAAA,CAtDKD,QAAQ;EAAA,QAGEJ,SAAS;AAAA;AAAAkC,EAAA,GAHnB9B,QAAQ;AAwDd,eAAeA,QAAQ;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}